version: '3.7'

services:
  redis:
    image: redis:6
    container_name: platon_redis
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    networks:
      - platon-network

  postgres:
    image: postgres:13
    container_name: platon_postgres
    ports:
      - '5432:5432'
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - platon-network
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    container_name: platon_pgadmin
    volumes:
      - ~/data/pgadmin:/root/.pgadmin
      - .docker/db/servers.json:/pgadmin4/servers.json
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - platon-network

  api:
    build:
      context: .
      dockerfile: .docker/node/Dockerfile
    image: platon/node
    container_name: platon_api
    command: ./bin/start/api.sh
    ports:
      - 4201
    volumes:
      - dist:/src/dist
      - ./uploads:/src/uploads
      - ./resources:/src/resources
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - platon-network

  nginx:
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile.prod
    image: platon/nginx
    container_name: platon_nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      # NGINX CONFIG
      - .docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - .docker/nginx/ssl/dhparam/dhparam.pem:/etc/nginx/dhparam.pem

      # LOCALHOST SSL CERTS
      - .docker/nginx/ssl/certs/localhost.crt:/etc/nginx/ssl/localhost.crt
      - .docker/nginx/ssl/certs/localhost.key:/etc/nginx/ssl/localhost.key

      # LET'S ENCRYPT SSL CONF
      #- .docker/certbot/www:/var/www/certbot
      #- .docker/certbot/conf:/etc/letsencrypt

      - dist:/usr/share/nginx/dist
    env_file:
      - .env
    networks:
      - platon-network
    links:
      - api:api
      - pgadmin:pgadmin
    depends_on:
      - api
      - pgadmin

  certbot:
    image: certbot/certbot
    container_name: platon_certbot
    restart: always
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  dist:
  redisdata:
  postgresdata:

networks:
  platon-network:
    driver: bridge
